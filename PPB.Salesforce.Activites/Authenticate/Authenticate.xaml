<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Salesforce User name (e.g. &quot;Bot_DW01@paddypowerbetfair.com&quot;)" Name="in_SalesforceUsername" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Salesforce Password" Name="in_SalesforcePassword" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Consumer Key for Salesforce Account. If unsure what value is, please contact Tech Support" Name="in_SalesforceConsumerKey" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Consumer Secret for Salesforce Account. If unsure what value is, please contact Tech Support" Name="in_SalesforceConsumerSecret" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="URL for Salesforce, should be &quot;https://eunew.my.salesforce.com&quot; (as of August 2022)." Name="out_SalesforceInstanceURL" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="API Key/Token for Salesforce." Name="out_SalesforceAccessToken" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF000001E4eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjoiQXV0aGVudGljYXRlIHRvIFNhbGVzZm9yY2UuIFx1MDAwZFx1MDAwYVx1MDAwZFx1MDAwYVlvdSB3aWxsIG5lZWQgU2FsZXNmb3JjZSBVc2VybmFtZVwvUGFzc3dvcmQgKENyZWRlbnRpYWxzIGZvciBBY2NvdW50KSxcdTAwMGRcdTAwMGFDb25zdW1lciBLZXkgYW5kIFNlY3JldCAoU2FtZSBmb3IgV2hvbGUgT3JnYW5pemF0aW9uKVx1MDAwZFx1MDAwYVlvdSB3aWxsIGJlIHJldHVybmVkIGFuIEluc3RhbmNlIFVSTCBhbmQgQWNjZXNzIFRva2VuIChBUEkgS2V5KSIsIjxWZXJzaW9uPmtfX0JhY2tpbmdGaWVsZCI6MX0=</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>1744,1685</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Authenticate to Salesforce. &#xA;&#xA;You will need Salesforce Username/Password (Credentials for Account),&#xA;Consumer Key and Secret (Same for Whole Organization)&#xA;You will be returned an Instance URL and Access Token (API Key)" DisplayName="Authenticate" sap:VirtualizedContainerService.HintSize="1724,1585" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strSalesforceAuthenticateEndpoint" />
      <Variable x:TypeArguments="x:String" Name="strHTTPResult" />
      <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
      <Variable x:TypeArguments="njl:JObject" Name="jObjectSalesforceResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign strSalesforceAuthenticateEndpoint" sap:VirtualizedContainerService.HintSize="1682,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strSalesforceAuthenticateEndpoint]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">https://login.salesforce.com/services/oauth2/token</InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:Annotation.AnnotationText="Throw an Exception if any of the following are empty:&#xA;- Username&#xA;- Password&#xA;- Consumer Key&#xA;- Consumer Secret" Condition="[String.IsNullOrEmpty(in_SalesforceUsername) Or&#xA;String.IsNullOrEmpty(New System.Net.NetworkCredential(String.Empty, in_SalesforcePassword).Password) Or &#xA;String.IsNullOrEmpty(in_SalesforceConsumerKey) Or&#xA;String.IsNullOrEmpty(New System.Net.NetworkCredential(String.Empty, in_SalesforceConsumerSecret).Password)]" DisplayName="If Username/Password/Key/Secret are empty" sap:VirtualizedContainerService.HintSize="1682,299" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw Exception (Credentials)" Exception="[If(String.IsNullOrEmpty(New System.Net.NetworkCredential(String.Empty, in_SalesforcePassword).Password),&#xA;New Exception(&quot;Unable to Authenticate - Salesforce Password Provided is Empty&quot;),&#xA;If(String.IsNullOrEmpty(in_SalesforceUsername),&#xA;&#x9;New Exception(&quot;Unable to Authenticate - Salesforce Username Provided is Empty&quot;),&#xA;&#x9;If(String.IsNullOrEmpty(in_SalesforceConsumerKey),&#xA;&#x9;&#x9;New Exception(&quot;Unable to Authenticate - Salesforce Consumer Key Provided is Empty&quot;),&#xA;&#x9;&#x9;New Exception(&quot;Unable to Authenticate - Salesforce Consumer Secret Provided is Empty&quot;)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
    </If>
    <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Authenticate (Salesforce)" EndPoint="[strSalesforceAuthenticateEndpoint]" sap:VirtualizedContainerService.HintSize="1682,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[strHTTPResult]" StatusCode="[intStatusCode]" TimeoutMS="30000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <InArgument x:TypeArguments="x:String" x:Key="grant_type">password</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="username">[in_SalesforceUsername]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="password">[new System.Net.NetworkCredential(string.Empty, in_SalesforcePassword).Password]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="client_id">[in_SalesforceConsumerKey]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="client_secret">[new System.Net.NetworkCredential(string.Empty, in_SalesforceConsumerSecret).Password]</InArgument>
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON - Authenticate (Salesforce)" sap:VirtualizedContainerService.HintSize="1682,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jObjectSalesforceResult]" JsonString="[strHTTPResult]" />
    <If Condition="[intStatusCode.Equals(200)= False]" DisplayName="If intStatusCode.Equals(200)= False" sap:VirtualizedContainerService.HintSize="1682,892" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Sequence DisplayName="Sequence - intStatusCode.Equals(200)= False" sap:VirtualizedContainerService.HintSize="1261,744" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[intStatusCode.Equals(0)]" DisplayName="If intStatusCode.Equals(0)" sap:VirtualizedContainerService.HintSize="1219,652" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <Throw DisplayName="Throw Exception (Salesforce Credentials)" Exception="[New Exception(&quot;Unable to Authenticate to Salesforce. Status Code: &quot;+intStatusCode.ToString+&quot;, no response returned&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
            </If.Then>
            <If.Else>
              <If Condition="[jObjectSalesforceResult(&quot;error_description&quot;).ToString.Contains(&quot;authentication failure&quot;)]" DisplayName="If Credentials are Wrong/Authentication Failure" sap:VirtualizedContainerService.HintSize="974,504" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <Throw DisplayName="Throw Exception (Salesforce Credentials)" Exception="[New Exception(&quot;Unable to Authenticate to Salesforce due to issue with User Profile and/or Password for &quot;+in_SalesforceUsername+&quot;. Status Code: &quot;+intStatusCode.ToString+&quot;, Error: &quot;+jObjectSalesforceResult(&quot;error&quot;).ToString+&quot;, Full Response: &quot;+strHTTPResult)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                </If.Then>
                <If.Else>
                  <If Condition="[jObjectSalesforceResult(&quot;error_description&quot;).ToString.Contains(&quot;client identifier invalid&quot;)]" DisplayName="If Client ID is Wrong" sap:VirtualizedContainerService.HintSize="729,356" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Then>
                      <Throw DisplayName="Throw Exception (Client ID)" Exception="[New Exception(&quot;Unable to Authenticate to Salesforce due to issue with Salesforce Client ID for &quot;+in_SalesforceUsername+&quot;. Status Code: &quot;+intStatusCode.ToString+&quot;, Error: &quot;+jObjectSalesforceResult(&quot;error&quot;).ToString+&quot;, Full Response: &quot;+strHTTPResult)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                    </If.Then>
                    <If.Else>
                      <If Condition="[jObjectSalesforceResult(&quot;error_description&quot;).ToString.Contains(&quot;invalid client credentials&quot;)]" DisplayName="If Client Secret is wrong" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_4">
                        <If.Then>
                          <Throw DisplayName="Throw Exception (Client Secret Issue)" Exception="[New Exception(&quot;Unable to Authenticate to Salesforce due to issue with Salesforce Consumer Secret for &quot;+in_SalesforceUsername+&quot;. Status Code: &quot;+intStatusCode.ToString+&quot;, Error: &quot;+jObjectSalesforceResult(&quot;error&quot;).ToString+&quot;, Full Response: &quot;+strHTTPResult)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
                        </If.Then>
                        <If.Else>
                          <Throw DisplayName="Throw Exception (General Error)" Exception="[New Exception(&quot;Unable to Authenticate to Salesforce due to unknown issue. Status Code: &quot;+intStatusCode.ToString+&quot;, Error: &quot;+jObjectSalesforceResult(&quot;error&quot;).ToString+&quot;, Full Response: &quot;+strHTTPResult)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Sequence - Result (Success)" sap:VirtualizedContainerService.HintSize="376,352" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - Result " sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Auth to Salesforce Successful - Status Code: &quot;+intStatusCode.ToString+&quot;, Instance URL: &quot;+jObjectSalesforceResult(&quot;instance_url&quot;).ToString]" />
          <ui:MultipleAssign DisplayName="Multiple Assign - Out Args (Authenticate)" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_SalesforceInstanceURL]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[jObjectSalesforceResult("instance_url").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_SalesforceAccessToken]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[jObjectSalesforceResult("access_token").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>