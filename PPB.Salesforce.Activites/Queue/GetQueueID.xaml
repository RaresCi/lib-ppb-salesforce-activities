<Activity mc:Ignorable="sap sap2010" x:Class="GetQueueID" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="API Key/Token for Salesforce. Please use &quot;Authenticate&quot; Activity to Retrieve this" Name="in_SalesforceAccessToken" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="URL for Salesforce, should be &quot;https://eunew.my.salesforce.com&quot; (as of August 2022). Can be retrieved using &quot;Authenticate&quot; Activity" Name="in_SalesforceInstanceURL" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Queue Name in Salesforce (e.g. &quot;AML Queue&quot; or &quot;SG Escalations&quot;)" Name="in_SalesforceQueueName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Queue ID you wish to retrieve Cases from (e.g. 00B4G000008yS9DUAU corresponds to &quot;AML Queue&quot;)" Name="out_QueueID" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF000000F8eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjoiUmV0dXJucyBhIFN0cmluZyBjb250YWluaW5nIGEgU2FsZXNmb3JjZSBRdWV1ZSBJRC4gU3VwcGx5IFF1ZXVlIE5hbWUgdG8gcmV0cmlldmUgdGhpcyIsIjxWZXJzaW9uPmtfX0JhY2tpbmdGaWVsZCI6MX0=</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>1104,1847</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Salesforce_GetCases_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="27">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Returns a String containing a Salesforce Queue ID. Supply Queue Name to retrieve this" DisplayName="GetQueueID" sap:VirtualizedContainerService.HintSize="1084,1787" sap2010:WorkflowViewState.IdRef="Sequence_15">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strHTTPResult" />
      <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
      <Variable x:TypeArguments="x:String" Name="strSQLQuery" />
      <Variable x:TypeArguments="njl:JArray" Name="jArrayResults" />
      <Variable x:TypeArguments="x:String" Name="strSalesforceQueryPartialEndpoint" />
      <Variable x:TypeArguments="x:String" Name="strFullEndpoint" />
      <Variable x:TypeArguments="njl:JObject" Name="jObjectSalesforceResult" />
      <Variable x:TypeArguments="x:String" Name="strQueueID" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If sap2010:Annotation.AnnotationText="If Error Occured, Throw Exception. If not, Continue" Condition="[String.IsNullOrEmpty(in_SalesforceAccessToken) Or&#xA;String.IsNullOrEmpty(in_SalesforceInstanceURL) Or &#xA;String.IsNullOrEmpty(in_SalesforceQueueName)]" DisplayName="If Access Token/Instance URL/Queue Name are empty" sap:VirtualizedContainerService.HintSize="1042,239" sap2010:WorkflowViewState.IdRef="If_17">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw Exception (Details Missing)" Exception="[If(String.IsNullOrEmpty(in_SalesforceAccessToken),&#xA;New Exception(&quot;Unable to get Queue ID - Access Token is missing&quot;),&#xA;If(String.IsNullOrEmpty(in_SalesforceInstanceURL),&#xA;&#x9;New Exception(&quot;Unable to get Queue ID - Instance URL is missing&quot;),&#xA;&#x9;&#x9;New Exception(&quot;Unable to get Queue ID - Queue Name is Missing&quot;)&#xA;&#x9;&#x9;)&#xA;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_13" />
      </If.Then>
    </If>
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="Salesforce Query Endpoint structured as follows&#xA;&#xA;- Salesforce Instance URL&#xA;- Query String&#xA;- SQL Query&#xA;&#xA;e.g. &#xA;- https://eunew.my.salesforce.com&#xA;- /services/data/v42.0/query?q=&#xA;- select Id, Name from ListView where Name = '{ListViewName}'&#xA;&#xA;Full:&#xA;https://eunew.my.salesforce.com/services/data/v42.0/query?q=select Id, Name from ListView where Name = '{ListViewName}'" DisplayName="Multiple Assign - Prepare Endpoint (ListView)" sap:VirtualizedContainerService.HintSize="1042,443" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strSQLQuery]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">select Id, Name from ListView where Name = '{ListViewName}'</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strSQLQuery]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[strSQLQuery.Replace("{ListViewName}", in_SalesforceQueueName)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strSalesforceQueryPartialEndpoint]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">/services/data/v42.0/query?q=</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strFullEndpoint]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_SalesforceInstanceURL+strSalesforceQueryPartialEndpoint+strSQLQuery]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Get Queue ID" EndPoint="[strFullEndpoint]" sap:VirtualizedContainerService.HintSize="1042,22" sap2010:WorkflowViewState.IdRef="HttpClient_6" Method="GET" Result="[strHTTPResult]" StatusCode="[intStatusCode]" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer "+in_SalesforceAccessToken]</InArgument>
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON - Get Queue ID" sap:VirtualizedContainerService.HintSize="1042,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[jObjectSalesforceResult]" JsonString="[strHTTPResult]" />
    <If Condition="[intStatusCode.Equals(200)= False]" DisplayName="If intStatusCode.Equals(200)= False (Get Queue ID)" sap:VirtualizedContainerService.HintSize="1042,771" sap2010:WorkflowViewState.IdRef="If_19">
      <If.Then>
        <Throw DisplayName="Throw Exception (Get Queue ID)" Exception="[If(intStatusCode.Equals(0),&#xA;New Exception(&quot;Unable to get Queue ID for &quot;+in_SalesforceQueueName+&quot;. Status Code: &quot;+intStatusCode.ToString+&quot;, No Response returned&quot;),&#xA;New Exception(&quot;Unable to get Queue ID for &quot;+in_SalesforceQueueName+&quot;. Status Code: &quot;+intStatusCode.ToString+&quot;, Full Response: &quot;+strHTTPResult)&#xA;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_15" />
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Sequence - intStatusCode.Equals(200)" sap:VirtualizedContainerService.HintSize="797,623" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array - Get Queue ID" sap:VirtualizedContainerService.HintSize="755,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_7" JsonArray="[jArrayResults]" JsonString="[jObjectSalesforceResult(&quot;records&quot;).ToString]" />
          <If Condition="[jArrayResults.Count &lt;= 0]" DisplayName="If jArrayResults.Count = 0 (Get Queue ID) " sap:VirtualizedContainerService.HintSize="755,431" sap2010:WorkflowViewState.IdRef="If_18">
            <If.Then>
              <ui:LogMessage DisplayName="Log Message - Queue Id NOT Found" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Warn" Message="[&quot;Status Code: &quot;+intStatusCode.ToString+&quot;, Unable to find Queue ID for &quot;&quot;&quot;+in_SalesforceQueueName+&quot;&quot;&quot;&quot;]" />
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Sequence - jArrayResults.Count &gt; 0" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign out_QueueID" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_QueueID]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[jArrayResults(0)("Id").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message - Queue ID Located" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Queue ID located for &quot;&quot;&quot;+in_SalesforceQueueName+&quot;&quot;&quot; - Status Code: &quot;+intStatusCode.ToString+&quot;, ID: &quot;+out_QueueID]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>